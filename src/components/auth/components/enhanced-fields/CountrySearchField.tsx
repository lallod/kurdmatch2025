
import React, { useState } from 'react';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Command, CommandEmpty, CommandGroup, CommandInput, CommandItem } from '@/components/ui/command';
import { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';
import { Button } from '@/components/ui/button';
import { Check, ChevronsUpDown, Globe } from 'lucide-react';
import { cn } from '@/lib/utils';

interface CountrySearchFieldProps {
  value?: string;
  onChange: (value: string) => void;
}

// List of all countries
const countries = [
  { code: 'AF', name: 'Afghanistan', flag: 'ðŸ‡¦ðŸ‡«' },
  { code: 'AL', name: 'Albania', flag: 'ðŸ‡¦ðŸ‡±' },
  { code: 'DZ', name: 'Algeria', flag: 'ðŸ‡©ðŸ‡¿' },
  { code: 'AD', name: 'Andorra', flag: 'ðŸ‡¦ðŸ‡©' },
  { code: 'AO', name: 'Angola', flag: 'ðŸ‡¦ðŸ‡´' },
  { code: 'AR', name: 'Argentina', flag: 'ðŸ‡¦ðŸ‡·' },
  { code: 'AM', name: 'Armenia', flag: 'ðŸ‡¦ðŸ‡²' },
  { code: 'AU', name: 'Australia', flag: 'ðŸ‡¦ðŸ‡º' },
  { code: 'AT', name: 'Austria', flag: 'ðŸ‡¦ðŸ‡¹' },
  { code: 'AZ', name: 'Azerbaijan', flag: 'ðŸ‡¦ðŸ‡¿' },
  { code: 'BD', name: 'Bangladesh', flag: 'ðŸ‡§ðŸ‡©' },
  { code: 'BE', name: 'Belgium', flag: 'ðŸ‡§ðŸ‡ª' },
  { code: 'BR', name: 'Brazil', flag: 'ðŸ‡§ðŸ‡·' },
  { code: 'BG', name: 'Bulgaria', flag: 'ðŸ‡§ðŸ‡¬' },
  { code: 'CA', name: 'Canada', flag: 'ðŸ‡¨ðŸ‡¦' },
  { code: 'CN', name: 'China', flag: 'ðŸ‡¨ðŸ‡³' },
  { code: 'HR', name: 'Croatia', flag: 'ðŸ‡­ðŸ‡·' },
  { code: 'CZ', name: 'Czech Republic', flag: 'ðŸ‡¨ðŸ‡¿' },
  { code: 'DK', name: 'Denmark', flag: 'ðŸ‡©ðŸ‡°' },
  { code: 'EG', name: 'Egypt', flag: 'ðŸ‡ªðŸ‡¬' },
  { code: 'FI', name: 'Finland', flag: 'ðŸ‡«ðŸ‡®' },
  { code: 'FR', name: 'France', flag: 'ðŸ‡«ðŸ‡·' },
  { code: 'GE', name: 'Georgia', flag: 'ðŸ‡¬ðŸ‡ª' },
  { code: 'DE', name: 'Germany', flag: 'ðŸ‡©ðŸ‡ª' },
  { code: 'GR', name: 'Greece', flag: 'ðŸ‡¬ðŸ‡·' },
  { code: 'IN', name: 'India', flag: 'ðŸ‡®ðŸ‡³' },
  { code: 'ID', name: 'Indonesia', flag: 'ðŸ‡®ðŸ‡©' },
  { code: 'IR', name: 'Iran', flag: 'ðŸ‡®ðŸ‡·' },
  { code: 'IQ', name: 'Iraq', flag: 'ðŸ‡®ðŸ‡¶' },
  { code: 'IE', name: 'Ireland', flag: 'ðŸ‡®ðŸ‡ª' },
  { code: 'IT', name: 'Italy', flag: 'ðŸ‡®ðŸ‡¹' },
  { code: 'JP', name: 'Japan', flag: 'ðŸ‡¯ðŸ‡µ' },
  { code: 'JO', name: 'Jordan', flag: 'ðŸ‡¯ðŸ‡´' },
  { code: 'KZ', name: 'Kazakhstan', flag: 'ðŸ‡°ðŸ‡¿' },
  { code: 'KE', name: 'Kenya', flag: 'ðŸ‡°ðŸ‡ª' },
  { code: 'KW', name: 'Kuwait', flag: 'ðŸ‡°ðŸ‡¼' },
  { code: 'LB', name: 'Lebanon', flag: 'ðŸ‡±ðŸ‡§' },
  { code: 'MY', name: 'Malaysia', flag: 'ðŸ‡²ðŸ‡¾' },
  { code: 'MX', name: 'Mexico', flag: 'ðŸ‡²ðŸ‡½' },
  { code: 'NL', name: 'Netherlands', flag: 'ðŸ‡³ðŸ‡±' },
  { code: 'NZ', name: 'New Zealand', flag: 'ðŸ‡³ðŸ‡¿' },
  { code: 'NO', name: 'Norway', flag: 'ðŸ‡³ðŸ‡´' },
  { code: 'PK', name: 'Pakistan', flag: 'ðŸ‡µðŸ‡°' },
  { code: 'PL', name: 'Poland', flag: 'ðŸ‡µðŸ‡±' },
  { code: 'PT', name: 'Portugal', flag: 'ðŸ‡µðŸ‡¹' },
  { code: 'QA', name: 'Qatar', flag: 'ðŸ‡¶ðŸ‡¦' },
  { code: 'RO', name: 'Romania', flag: 'ðŸ‡·ðŸ‡´' },
  { code: 'RU', name: 'Russia', flag: 'ðŸ‡·ðŸ‡º' },
  { code: 'SA', name: 'Saudi Arabia', flag: 'ðŸ‡¸ðŸ‡¦' },
  { code: 'RS', name: 'Serbia', flag: 'ðŸ‡·ðŸ‡¸' },
  { code: 'SG', name: 'Singapore', flag: 'ðŸ‡¸ðŸ‡¬' },
  { code: 'ES', name: 'Spain', flag: 'ðŸ‡ªðŸ‡¸' },
  { code: 'SE', name: 'Sweden', flag: 'ðŸ‡¸ðŸ‡ª' },
  { code: 'CH', name: 'Switzerland', flag: 'ðŸ‡¨ðŸ‡­' },
  { code: 'SY', name: 'Syria', flag: 'ðŸ‡¸ðŸ‡¾' },
  { code: 'TH', name: 'Thailand', flag: 'ðŸ‡¹ðŸ‡­' },
  { code: 'TR', name: 'Turkey', flag: 'ðŸ‡¹ðŸ‡·' },
  { code: 'UA', name: 'Ukraine', flag: 'ðŸ‡ºðŸ‡¦' },
  { code: 'AE', name: 'United Arab Emirates', flag: 'ðŸ‡¦ðŸ‡ª' },
  { code: 'GB', name: 'United Kingdom', flag: 'ðŸ‡¬ðŸ‡§' },
  { code: 'US', name: 'United States', flag: 'ðŸ‡ºðŸ‡¸' },
  { code: 'VN', name: 'Vietnam', flag: 'ðŸ‡»ðŸ‡³' },
  { code: 'YE', name: 'Yemen', flag: 'ðŸ‡¾ðŸ‡ª' },
];

const CountrySearchField = ({ value, onChange }: CountrySearchFieldProps) => {
  const [open, setOpen] = useState(false);
  const selectedCountry = countries.find(country => country.name === value);

  return (
    <div className="space-y-3">
      <div className="flex items-center gap-2">
        <Globe className="w-4 h-4 text-purple-400" />
        <Label className="text-white">Born In</Label>
      </div>
      <Popover open={open} onOpenChange={setOpen}>
        <PopoverTrigger asChild>
          <Button
            variant="outline"
            role="combobox"
            aria-expanded={open}
            className="w-full justify-between bg-white/10 backdrop-blur border-white/20 text-white hover:bg-white/20"
          >
            {selectedCountry ? (
              <span className="flex items-center gap-2">
                <span>{selectedCountry.flag}</span>
                {selectedCountry.name}
              </span>
            ) : (
              "Select country..."
            )}
            <ChevronsUpDown className="ml-2 h-4 w-4 shrink-0 opacity-50" />
          </Button>
        </PopoverTrigger>
        <PopoverContent className="w-full p-0 bg-gray-900 border-gray-700">
          <Command>
            <CommandInput 
              placeholder="Search countries..." 
              className="text-white"
            />
            <CommandEmpty>No country found.</CommandEmpty>
            <CommandGroup className="max-h-60 overflow-auto">
              {countries.map((country) => (
                <CommandItem
                  key={country.code}
                  value={country.name}
                  onSelect={(currentValue) => {
                    onChange(currentValue === value ? "" : currentValue);
                    setOpen(false);
                  }}
                  className="text-white hover:bg-gray-800"
                >
                  <Check
                    className={cn(
                      "mr-2 h-4 w-4",
                      value === country.name ? "opacity-100" : "opacity-0"
                    )}
                  />
                  <span className="mr-2">{country.flag}</span>
                  {country.name}
                </CommandItem>
              ))}
            </CommandGroup>
          </Command>
        </PopoverContent>
      </Popover>
    </div>
  );
};

export default CountrySearchField;
